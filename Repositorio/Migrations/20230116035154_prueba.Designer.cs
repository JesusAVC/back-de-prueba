// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

#nullable disable

namespace Repositorio.Migrations
{
    [DbContext(typeof(_dbContext))]
    [Migration("20230116035154_prueba")]
    partial class prueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelos.CategoriaModel", b =>
                {
                    b.Property<int>("idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idcategoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idcategoria");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Modelos.ClienteModel", b =>
                {
                    b.Property<int>("idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idcliente"));

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("num_documento")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("tipo_cliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("idcliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Modelos.DetalleIngresoModel", b =>
                {
                    b.Property<int>("idingreso")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasMaxLength(4)
                        .HasColumnType("bit");

                    b.Property<int>("id_ingreso")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<double>("precio")
                        .HasMaxLength(9)
                        .HasColumnType("float");

                    b.HasKey("idingreso");

                    b.HasIndex("id_producto");

                    b.ToTable("detalleingreso");
                });

            modelBuilder.Entity("Modelos.IngresoModel", b =>
                {
                    b.Property<int>("idingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idingreso"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_proveedor")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<decimal>("impuesto")
                        .HasMaxLength(9)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("num_comprobante")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("serie_comprobante")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("total")
                        .HasMaxLength(9)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idingreso");

                    b.HasIndex("idproveedor");

                    b.ToTable("ingreso");
                });

            modelBuilder.Entity("Modelos.MarcaModel", b =>
                {
                    b.Property<int>("idmarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idmarca"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idmarca");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("Modelos.ProductoModel", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idproducto"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_marca")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("precio_venta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("stock")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idproducto");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_marca");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("Modelos.ProveedorModel", b =>
                {
                    b.Property<int>("idproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idproveedor"));

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("representante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("idproveedor");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("Modelos.DetalleIngresoModel", b =>
                {
                    b.HasOne("Modelos.ProductoModel", "producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.IngresoModel", "ingreso")
                        .WithMany()
                        .HasForeignKey("idingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingreso");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Modelos.IngresoModel", b =>
                {
                    b.HasOne("Modelos.ProveedorModel", "proveedor")
                        .WithMany()
                        .HasForeignKey("idproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("Modelos.ProductoModel", b =>
                {
                    b.HasOne("Modelos.CategoriaModel", "categoria")
                        .WithMany()
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.MarcaModel", "marca")
                        .WithMany()
                        .HasForeignKey("id_marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("marca");
                });
#pragma warning restore 612, 618
        }
    }
}
